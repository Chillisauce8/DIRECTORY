import { defineComponent, ref, watch, h } from 'vue';
import DashboardPlugin from '@uppy/dashboard';
import { Uppy } from '@uppy/core';
import useUppy from './useUppy.js';
export default defineComponent({
  name: 'DashboardModal',
  props: {
    uppy: {
      type: Uppy,
      required: true
    },
    props: {
      type: Object
    },
    open: {
      type: Boolean,
      required: true
    }
  },
  setup(props) {
    const containerRef = ref();
    const pluginRef = ref();
    const propsRef = ref(props.props);
    const onMount = () => {
      const {
        uppy
      } = props;
      const options = {
        id: 'DashboardModal',
        inline: false,
        ...props.props,
        target: containerRef.value
      };
      uppy.use(DashboardPlugin, options);
      pluginRef.value = uppy.getPlugin(options.id);
    };
    useUppy(onMount, pluginRef, props.uppy, propsRef);
    watch(() => props.open, (current, old) => {
      if (current && !old) {
        pluginRef.value.openModal();
      }
      if (!current && old) {
        pluginRef.value.closeModal();
      }
    });
    return () => h('div', {
      ref: containerRef
    });
  }
});