import { joinURL, parseURL, withLeadingSlash } from "ufo";
export function resolveApiUrlPath(endpointPath, runtimeConfig) {
  if (isExternalUrl(endpointPath)) {
    return endpointPath;
  }
  const baseURL = resolveApiBaseURL(runtimeConfig);
  return joinURL(baseURL, endpointPath);
}
export function resolveApiBaseURL(runtimeConfig, returnOnlyPathname) {
  const authRuntimeConfig = runtimeConfig.public.auth;
  if (returnOnlyPathname === void 0) {
    returnOnlyPathname = !runtimeConfig.public.auth.disableInternalRouting;
  }
  let baseURL = authRuntimeConfig.baseURL;
  if (import.meta.server !== false && authRuntimeConfig.originEnvKey) {
    const envBaseURL = process.env[authRuntimeConfig.originEnvKey];
    if (envBaseURL) {
      baseURL = envBaseURL;
    }
  }
  if (returnOnlyPathname) {
    baseURL = withLeadingSlash(parseURL(baseURL).pathname);
  }
  return baseURL;
}
export function determineCallbackUrl(authConfig, getOriginalTargetPath) {
  const authConfigCallbackUrl = typeof authConfig.globalAppMiddleware === "object" ? authConfig.globalAppMiddleware.addDefaultCallbackUrl : void 0;
  if (typeof authConfigCallbackUrl !== "undefined") {
    if (typeof authConfigCallbackUrl === "string") {
      return authConfigCallbackUrl;
    }
    if (typeof authConfigCallbackUrl === "boolean") {
      if (authConfigCallbackUrl) {
        return getOriginalTargetPath();
      }
    }
  } else if (authConfig.globalAppMiddleware === true) {
    return getOriginalTargetPath();
  }
}
export function isExternalUrl(url) {
  return url.startsWith("http://") || url.startsWith("https://");
}
