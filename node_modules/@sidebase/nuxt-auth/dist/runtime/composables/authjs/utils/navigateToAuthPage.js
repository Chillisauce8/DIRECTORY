import { sanitizeStatusCode } from "h3";
import { abortNavigation, callWithNuxt, useNuxtApp } from "#app";
export function navigateToAuthPageWN(nuxt, href) {
  return callWithNuxt(nuxt, navigateToAuthPage, [href]);
}
export function navigateToAuthPage(href) {
  const nuxtApp = useNuxtApp();
  if (import.meta.server) {
    if (nuxtApp.ssrContext) {
      return nuxtApp.callHook("app:redirected").then(() => {
        const encodedLoc = href.replace(/"/g, "%22");
        const encodedHeader = new URL(href).toString();
        nuxtApp.ssrContext._renderResponse = {
          statusCode: sanitizeStatusCode(302, 302),
          body: `<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=${encodedLoc}"></head></html>`,
          headers: { location: encodedHeader }
        };
        abortNavigation();
      });
    }
  }
  window.location.href = href;
  if (href.includes("#")) {
    window.location.reload();
  }
  const router = nuxtApp.$router;
  const waitForNavigationWithFallbackToRouter = new Promise((resolve) => setTimeout(resolve, 60 * 1e3)).then(() => router.push(href));
  return waitForNavigationWithFallbackToRouter;
}
