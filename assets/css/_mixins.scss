// FUNCTIONS
// General to strip the unit off a value.

// SWP

$dt: 960px;

@use 'sass:math';

@mixin generate-shades($name, $h, $s, $l) {
    // First loop: Iterate through values of `l` using the provided `s`
    @for $i from 0 through 100 {
        $current-l: $i + '%';
        $current-s: $i + '%';
        --#{$name}-shade-l-#{$i}: hsl(#{$h}, #{$s} + '%', #{$current-l});
        --#{$name}-shade-s-#{$i}: hsl(#{$h}, #{$current-s}, #{$l} + '%');
    }
}

// NEW

@function strip-units($number) {
    @return math.div($number, ($number * 0 + 1));
}

@mixin ellipsis() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin transition() {
    transition: all 0.5s ease-in-out;
}
@mixin shadow-soft() {
    box-shadow: 2px 2px 10px $CB-2;
}
@mixin shadow-strong {
    box-shadow: 3px 3px 5px $CB-5;
}
@mixin shadow-left {
    box-shadow: -1px 1px 2px $CB-4;
}
@mixin shadow-right {
    box-shadow: 1px 1px 2px $CB-4;
}

@mixin parallax($speed) {
    animation: parallax linear both;
    animation-timeline: view();
    animation-range: entry 100% cover 100%;
    --parallax-speed: #{$speed};
}
@keyframes parallax {
    to {
        transform: translateY(calc(var(--parallax-speed) * 100px));
    }
}
@mixin grow($size) {
    animation: grow linear both;
    animation-timeline: view();
    animation-range: entry 100% cover 100%;
    --grow-size: #{$size};
}
@keyframes grow {
    to {
        transform: scale(var(--grow-size));
    }
}

@mixin shadow-low {
    box-shadow: 3px 3px 5px $CB-1;
}

@mixin frosted-glass() {
    backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.8);
}
@mixin frosted-glass-light() {
    backdrop-filter: grayscale(1);
    // backdrop-filter: blur(1px);
    background-color: rgba(255, 255, 255, 0.6);
}
@mixin frosted-glass-dark() {
    //backdrop-filter: grayscale(1);
    backdrop-filter: blur(5px);
    background-color: rgba(50, 50, 50, 0.1);
}
@mixin frosted-glass-darker() {
    //backdrop-filter: grayscale(1);
    backdrop-filter: blur(5px);
    background-color: rgba(50, 50, 50, 0.4);
}

@mixin scale($property, $min, $max, $rate, $start: 320px) {
    #{$property}: clamp(#{$min}, calc(#{$min} + ((#{strip-units($min)} * (#{$rate} - 1) * ((100vw - #{$start}) / #{strip-units($start)})))), #{$max});
}

// OLD BELOW

@function strip-units($number) {
    @return math.div($number, ($number * 0 + 1));
}

@mixin parent-center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin links($link-color, $hover-color) {
    color: $link-color;
    &:link,
    &:visited,
    &:active {
        color: $link-color;
    }
    &:hover {
        transition: color ease-in-out 0.5s;
        color: $hover-color;
    }
}

@mixin desktop() {
    @media screen and (min-width: $dt) {
        @content;
    }
}

@mixin mobile() {
    @media screen and (max-width: $dt) {
        @content;
    }
}

// ASPECT RATIO To create an aspect ratio: https://keithjgrant.com/posts/2017/03/aspect-ratios/

@mixin aspect-ratio($width, $height) {
    @supports (aspect-ratio: auto) {
        aspect-ratio: calc($width / $height);
    }
    @supports not (aspect-ratio: auto) {
        &:before {
            content: '';
            float: left;
            padding-bottom: calc($height / $width * 100%);
        }
        &:after {
            clear: left;
            content: '';
            display: table;
        }
    }
}

@mixin font-size($size) {
    $min: 10px;
    $max: 50px;
    @if $size == 0 {
        $min: 16px;
        $max: 20px;
    } @else if $size == 1 {
        $min: 18px;
        $max: 22px;
    } @else if $size == 2 {
        $min: 20px;
        $max: 24px;
    } @else if $size == 3 {
        $min: 22px;
        $max: 26px;
    } @else if $size == 4 {
        $min: 24px;
        $max: 28px;
    } @else if $size == 5 {
        $min: 26px;
        $max: 30px;
    } @else if $size == 6 {
        $min: 28px;
        $max: 32px;
    } @else if $size == 7 {
        $min: 30px;
        $max: 34px;
    } @else if $size == 8 {
        $min: 32px;
        $max: 36px;
    }
    @include scale('font-size', $min, $max, 1.1);
}

@mixin font-style($style) {
    @if $style == 'header' {
        font-family: var(--primary-font-family);
        text-transform: uppercase;
        letter-spacing: 0.2em;
        line-height: 1.1;
    }
}

@mixin overlay() {
    //Cover the whole parent area - parent should be position : relative
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
}

@mixin ellipsis() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

@mixin slider() {
    // **CLEAN** THIS BLOCK UP _ COPIED FROM HORIZONTAL SLIDER

    .v-hl-container {
        //    margin: 0 auto -30px !important; // UPDATED ZEB
        margin: 0 auto !important;
        width: auto !important;
    }
    .v-hl-btn-prev {
        left: 25px !important;
    }
    .v-hl-btn-next {
        right: 25px !important;
    }
    //  animation: showSlider 1s ease-in-out 0s both;
    //  transform: translate(90vw, 0);
    //   opacity: 0;
    //  animation: showSlider 1s ease-in-out 0s both;
    &:not(.INTERSECTING) {
        opacity: 0;
    }
    &.VIEWED {
        @include mobile {
            animation: showSliderMobile 1s ease-in-out 0s both;
        }
        @include desktop {
            animation: showSlider 1s ease-in-out 0s both;
        }
    }
    position: relative;
    display: flex;

    .scroll-wrapper .card-wrapper:not(.package-product-card) {
        margin: 20px 10px;

        // width: 300px;
    }

    /*
  & .scroll-wrapper .card-wrapper {
    &:not(.card-wrapper .card-wrapper) {
      &:not(.custom-card){
      margin: 20px 10px;
      width: 300px;
      min-width: 300px;
    }
  }

  }
  */
    .v-hl-btn {
        position: absolute;
        align-self: center;
        z-index: 200;
        top: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        cursor: pointer;
    }
    .v-hl-btn-prev {
        left: 0;
    }
    .v-hl-btn-prev.v-hl-btn-between {
        transform: translateX(-50%);
    }
    .v-hl-btn-next {
        right: 0;
    }
    .v-hl-btn-next.v-hl-btn-between {
        transform: translateX(50%);
    }
    .v-hl-svg {
        width: 40px;
        height: 40px;
        margin: 6px;
        padding: 6px;
        border-radius: 20px;
        box-sizing: border-box;
        background: white;
        color: black;
        fill: currentColor;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    }
    .v-hl-container {
        display: flex;
        width: 100%;
        margin: 0;
        padding: 0;
        border: none;
        box-sizing: content-box;
        overflow-x: scroll;
        overflow-y: hidden;
        scroll-snap-type: x mandatory;
        -webkit-overflow-scrolling: touch;
    }
    .v-hl-container > * {
        flex-shrink: 0;
        box-sizing: border-box;
        /* Prevent content from collapsing when empty. E.g. image while loading height=0. */
        min-height: 1px;
    }
    .v-hl-snap-start > * {
        scroll-snap-align: start;
    }
    .v-hl-snap-center > * {
        scroll-snap-align: center;
    }
    .v-hl-snap-end > * {
        scroll-snap-align: end;
    }
    .v-hl-container:not(.v-hl-scroll) {
        scrollbar-width: none;
        -ms-overflow-style: none;
        /* To effectively hide scrollbar for iOS Safari. 10% of the users. */ // UPDATED ZEB
        //   padding-bottom: 30px;
        //   margin-bottom: -30px;
        //   clip-path: inset(0 0 30px 0);
    }
    .v-hl-container:not(.v-hl-scroll)::-webkit-scrollbar {
        /* !important: So that users don't accidentally show scrollbar. */
        width: 0 !important;
        height: 0 !important;
    }
    /* Using https://tailwindcss.com/docs/responsive-design breakpoints. */
    .v-hl-responsive > * {
        width: 100%;
        margin-right: 24px;
    }
    .v-hl-responsive > *:last-child {
        margin-right: 0;
    }
    @media (min-width: 640px) {
        .v-hl-responsive > * {
            width: calc((100% - 24px) / 2);
        }
    }
    @media (min-width: 768px) {
        .v-hl-responsive > * {
            width: calc((100% - 48px) / 3);
        }
    }
    @media (min-width: 1024px) {
        .v-hl-responsive > * {
            width: calc((100% - 72px) / 4);
        }
    }
    @media (min-width: 1280px) {
        .v-hl-responsive > * {
            width: calc((100% - 96px) / 5);
        }
    }
}
// Removes or ignores slider elements whn it is not a slider.
@mixin no-slider() {
    & .v-hl-container.slider-only {
        display: contents;
    }
    & .slider-only {
        display: none;
    }
}

@mixin fc-input-core {
    width: 100%;
    font-size: $fc-font-size;
    line-height: $fc-font-line-height;
    background-color: transparent !important;
    border-radius: 0 !important;

    border: none;
    padding: 0;
    margin: 0;
}

@mixin fc-input {
    @include fc-input-core;
}

@mixin fc-input-disabled {
    @include fc-input-core;

    color: $fc-font-color-disabled;
}

@mixin fc-cs-form-text-error-default {
    color: $fc-font-color-error;
}
